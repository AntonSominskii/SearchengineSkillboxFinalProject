# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Test Java Spring Boot Application 

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: skillbox-gitlab
          server-username: gitlab
          server-password: ${{ secrets.MAVEN_TOKEN }}
          settings-path: ${{ github.workspace }}/settings.xml

      - name: Create Maven settings.xml
        run: |
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" 
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                   xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
              <servers>
                <server>
                  <id>skillbox-gitlab</id>
                  <username>gitlab</username>
                  <password>${{ secrets.MAVEN_TOKEN }}</password>
                </server>
              </servers>
            </settings>' > ${{ github.workspace }}/settings.xml

      - name: Build with Maven
        run: mvn -s ${{ github.workspace }}/settings.xml clean install

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: skillbox-gitlab
          server-username: gitlab
          server-password: ${{ secrets.MAVEN_TOKEN }}
          settings-path: ${{ github.workspace }}/settings.xml

      - name: Test with Maven
        run: mvn -s ${{ github.workspace }}/settings.xml test

      - name: Generate Allure Report
        run: mvn -s ${{ github.workspace }}/settings.xml allure:report

      - uses: actions/upload-artifact@v3
        with:
          name: Allure Report
          path: target/site/allure-maven-plugin
